/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package mandelbrotset;

import java.awt.Graphics;
import java.util.Stack;

/**
 *
 * @author trinch
 */
public class DragonCurve extends javax.swing.JPanel {

    String seq = "FX"; // axiom
    double scale = 3;
    
    /**
     * Creates new form DragonCurve
     */
    public DragonCurve() {
        initComponents();
        buildString(15);
    }


   

    
    @Override
    public void paintComponent(Graphics g)
    {
        //System.out.println("painting");
        super.paintComponent(g); // Do the original draw
        scale = ((double)this.getHeight() / 300.0);
        System.out.println("Scale: " + scale);
        drawString(g, this.getHeight(), this.getWidth());
    }
    
    public void drawString(Graphics g, int height, int width) {

        int angle = 90;
        int x = width/3, y = 2*height/3; // start drawing at bottom middle pixel of the screen
        int newx = 0, newy = 0;
        
        for(int i=0; i<seq.length(); i++) {
            if (seq.charAt(i) == 'F') {
                
                newx = x + (int)Math.round(scale * Math.sin(((2*Math.PI)/360) * angle));// (int)(scale/2 * Math.sqrt(2));
                newy = y - (int)Math.round(scale * Math.cos(((2*Math.PI)/360) * angle));
                
                g.drawLine(x, y, newx, newy);
                
            } else if(seq.charAt(i) == '+') {
                
                angle += 90; 
                if (angle > 180)
                    angle = - (360 - angle);
                
            } else if(seq.charAt(i) == '-') {
                angle -= 90; 
                if (angle <= -180)
                    angle = (360 + angle);
                
            } 
            
            x = newx;
            y = newy;
        }
    }
    
    public void rewrite() {
        String newSeq = new String();
        
        // for every character execute a rewrite rule
        for(int i=0; i<seq.length(); i++) {
            if (seq.charAt(i) == 'X') {
                newSeq = newSeq.concat("X+YF+");
            } else if(seq.charAt(i) == 'Y') {
                newSeq = newSeq.concat("-FX-Y");
            } else {
                newSeq = newSeq.concat(Character.toString(seq.charAt(i)));
            }
        }
        
        this.seq = newSeq;
    }
    
    public void buildString(int n) {
        for(int i=0; i<n; i++) {
            rewrite();
            //System.out.println(this.seq);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
